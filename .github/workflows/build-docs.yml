name: Build Docs

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize]

env:
  UV_SYSTEM_PYTHON: 1
  CUSTOM_VAR: "value"

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            docs:
              - README.md
              - docs/**
              - examples/**
              - requirements-docs.txt
              - requirements-docs-insiders.txt
              - pyproject.toml
              - mkdocs*.yml
              - .github/workflows/build-docs.yml
              - .github/workflows/deploy-docs.yml

  langs:
    needs: [changes]
    if: needs.changes.outputs.docs == 'true'
    runs-on: ubuntu-latest
    outputs:
      langs: ${{ steps.show-langs.outputs.langs }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true
          cache-dependency-glob: |
            requirements**.txt
            pyproject.toml
      - name: Install docs dependencies
        run: uv pip install -r requirements-docs.txt
      - name: Install MkDocs Insiders (if token available)
        if: ( github.event_name != 'pull_request' || github.secret_source == 'Actions' )
        run: uv pip install -r requirements-docs-insiders.txt
        env:
          TOKEN: ${{ secrets.READYAPI_MKDOCS_MATERIAL }}
      - name: Verify Docs (README, config, untranslated)
        run: |
          python ./scripts/docs.py verify-docs || {
            echo "Detected invalid config or non-translated files. Failing gracefully.";
            exit 1;
          }
      - name: Export Language Codes
        id: show-langs
        run: |
          echo "langs=$(python ./scripts/docs.py langs-json)" >> $GITHUB_OUTPUT

  build-docs:
    needs: [langs]
    if: ${{ always() && needs.langs.outputs.langs != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lang: ${{ fromJson(needs.langs.outputs.langs) }}
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/master' && 'production' || 'development' }}
      JOB_SPECIFIC_VAR: "value"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true
          cache-dependency-glob: |
            requirements**.txt
            pyproject.toml
      - name: Install docs dependencies
        run: uv pip install -r requirements-docs.txt
      - name: Install MkDocs Insiders
        if: ( github.event_name != 'pull_request' || github.secret_source == 'Actions' )
        run: uv pip install -r requirements-docs-insiders.txt
        env:
          TOKEN: ${{ secrets.READYAPI_MKDOCS_MATERIAL }}
      - name: Update mkdocs config
        run: python ./scripts/docs.py update-languages
      - uses: actions/cache@v4
        with:
          key: mkdocs-cache-${{ matrix.lang }}-${{ github.sha }}
          path: docs/${{ matrix.lang }}/.cache
      - name: Build Docs
        run: python ./scripts/docs.py build-lang ${{ matrix.lang }}
        env:
          BASE_URL: ${{ github.ref == 'refs/heads/master' && 'https://readyapi.github.io' }}
      - uses: actions/upload-artifact@v4
        with:
          name: docs-site-${{ matrix.lang }}
          path: ./site/**
          include-hidden-files: true

  docs-all-green:
    if: always()
    needs: [build-docs]
    runs-on: ubuntu-latest
    steps:
      - name: Check if all docs jobs succeeded
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: build-docs
